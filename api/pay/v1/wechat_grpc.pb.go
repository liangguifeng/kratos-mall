// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.5.1
// source: api/pay/v1/wechat.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// WechatClient is the client API for Wechat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WechatClient interface {
	H5(ctx context.Context, in *H5Request, opts ...grpc.CallOption) (*H5Response, error)
}

type wechatClient struct {
	cc grpc.ClientConnInterface
}

func NewWechatClient(cc grpc.ClientConnInterface) WechatClient {
	return &wechatClient{cc}
}

func (c *wechatClient) H5(ctx context.Context, in *H5Request, opts ...grpc.CallOption) (*H5Response, error) {
	out := new(H5Response)
	err := c.cc.Invoke(ctx, "/api.pay.v1.Wechat/H5", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WechatServer is the server API for Wechat service.
// All implementations must embed UnimplementedWechatServer
// for forward compatibility
type WechatServer interface {
	H5(context.Context, *H5Request) (*H5Response, error)
	mustEmbedUnimplementedWechatServer()
}

// UnimplementedWechatServer must be embedded to have forward compatible implementations.
type UnimplementedWechatServer struct {
}

func (UnimplementedWechatServer) H5(context.Context, *H5Request) (*H5Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method H5 not implemented")
}
func (UnimplementedWechatServer) mustEmbedUnimplementedWechatServer() {}

// UnsafeWechatServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WechatServer will
// result in compilation errors.
type UnsafeWechatServer interface {
	mustEmbedUnimplementedWechatServer()
}

func RegisterWechatServer(s grpc.ServiceRegistrar, srv WechatServer) {
	s.RegisterService(&Wechat_ServiceDesc, srv)
}

func _Wechat_H5_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(H5Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WechatServer).H5(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.pay.v1.Wechat/H5",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WechatServer).H5(ctx, req.(*H5Request))
	}
	return interceptor(ctx, in, info, handler)
}

// Wechat_ServiceDesc is the grpc.ServiceDesc for Wechat service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Wechat_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.pay.v1.Wechat",
	HandlerType: (*WechatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "H5",
			Handler:    _Wechat_H5_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/pay/v1/wechat.proto",
}
